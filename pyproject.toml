[project]
name = "lazy-ecs"
version = "0.7.4"
description = "A CLI tool for working with AWS services"
readme = "README.md"
authors = [
  { name = "Janne Sinivirta", email = "janne.sinivirta@gmail.com" },
]
requires-python = ">=3.11"
keywords = ["aws", "ecs", "cli", "terminal", "tui", "devops", "container", "fargate", "docker", "interactive"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Programming Language :: Python :: 3.14",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]
dependencies = [
  "questionary==2.1.1",
  "boto3==1.40.45",
  "rich==14.1.0",
]

[project.urls]
Homepage = "https://github.com/vertti/lazy-ecs"
Repository = "https://github.com/vertti/lazy-ecs"
Issues = "https://github.com/vertti/lazy-ecs/issues"
Documentation = "https://github.com/vertti/lazy-ecs#readme"

[project.scripts]
lazy-ecs = "lazy_ecs:main"

[dependency-groups]
dev = [
  "pytest==8.4.2",
  "pytest-cov==7.0.0",
  "pytest-mock==3.15.0",
  "moto[ecs]==5.1.12",
  "ruff==0.13.0",
  "pre-commit==4.3.0",
  "pyrefly==0.32.0",
  "boto3-stubs[ecs,logs,sts,cloudwatch]==1.40.30",
  "coveralls>=4.0.1",
]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = ["ALL"]
ignore = [
  # Formatter conflicts
  "COM812", # Trailing comma - conflicts with formatter
  "ISC001", # Implicit string concatenation - conflicts with formatter

  # Docstrings - too verbose for this project style
  "D100",
  "D101",
  "D102",
  "D103",
  "D104",
  "D105",
  "D107",
  "D203",
  "D213", # Incompatible docstring rules
  "D401", # First line should be imperative - we prefer descriptive

  # Line length - we use 120, not 88
  "E501", # Handle with line-length = 120 instead

  # Not applicable for CLI tool
  "TID252", # Relative imports are fine in our structure
  "TC001",
  "TC002",
  "TC003", # Type checking imports - not worth the complexity

  # Too restrictive
  "FBT001", # Boolean positional args are OK
  "S110", # Try/except pass - sometimes needed
  "SLF001", # Private member access - needed for testing
  "PLC0415", # Import at top - sometimes needed for dynamic imports
  "BLE001", # Blind except - acceptable for top-level error handling
  "PLR2004", # Magic values - small numbers in comparisons are clear
  "DTZ006",
  "DTZ901", # Datetime timezone - not critical for this tool
  "PERF401", # List comprehensions - readability over micro-optimizations
  "TRY300",
  "TRY301", # Try/except else blocks - not needed

  # Complexity - will address selectively
  "C901", # Function complexity
  "PLR0911", # Too many return statements
  "PLR0912", # Too many branches
  "PLR0913", # Too many arguments
  "PLR0915", # Too many statements
]

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
  "ANN001", # Missing type annotation for function argument (test fixtures/mocks)
  "ANN201", # Missing return type annotation for public function (test fixtures)
  "S101", # Use of assert - that's the point of tests!
  "PLR0913", # Too many arguments in test functions
  "PLR2004", # Magic values in tests are fine for readability
  "DTZ001", # Datetime without timezone - test data doesn't need it
  "PT019", # Fixture without value - sometimes needed for side effects
  "PGH003", # Type ignore without code - acceptable in tests
]
"scripts/**" = [
  "T201", # Print statements - needed for script output
  "PLC0415", # Import in function - needed for screenshot generation
  "DTZ001", # Datetime without timezone - mock data is fine
  "PGH003", # Type ignore without code - will fix if needed
  "EXE001", # Shebang on non-executable - handled by uv run
]

[tool.pyrefly]
project-includes = ["**/*"]
project-excludes = [
  "**/node_modules",
  "**/__pycache__",
  "**/*venv/**/*",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--cov=src/lazy_ecs",
  "--cov-report=term-missing",
  "--cov-report=html",
  "--cov-report=lcov",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
