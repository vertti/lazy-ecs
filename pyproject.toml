[project]
name = "lazy-ecs"
version = "0.4.0"
description = "A CLI tool for working with AWS services"
readme = "README.md"
authors = [
  { name = "Janne Sinivirta", email = "janne.sinivirta@gmail.com" },
]
requires-python = ">=3.11"
keywords = ["aws", "ecs", "cli", "terminal", "tui", "devops", "container", "fargate", "docker", "interactive"]
classifiers = [
  "Development Status :: 4 - Beta",
  "Environment :: Console",
  "Intended Audience :: Developers",
  "Intended Audience :: System Administrators",
  "License :: OSI Approved :: MIT License",
  "Operating System :: OS Independent",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3.13",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Systems Administration",
  "Topic :: Utilities",
]
dependencies = [
  "questionary==2.1.1",
  "boto3==1.40.41",
  "rich==14.1.0",
]

[project.urls]
Homepage = "https://github.com/vertti/lazy-ecs"
Repository = "https://github.com/vertti/lazy-ecs"
Issues = "https://github.com/vertti/lazy-ecs/issues"
Documentation = "https://github.com/vertti/lazy-ecs#readme"

[project.scripts]
lazy-ecs = "lazy_ecs:main"

[tool.uv]
dev-dependencies = [
  "pytest==8.4.2",
  "pytest-cov==7.0.0",
  "pytest-mock==3.15.0",
  "moto[ecs]==5.1.12",
  "ruff==0.13.0",
  "pre-commit==4.3.0",
  "pyrefly==0.32.0",
  "boto3-stubs[ecs,logs,sts,cloudwatch]==1.40.30",
]

[tool.ruff]
target-version = "py311"
line-length = 120

[tool.ruff.lint]
select = [
  "E", # pycodestyle errors
  "W", # pycodestyle warnings
  "F", # pyflakes
  "I", # isort
  "B", # flake8-bugbear
  "C4", # flake8-comprehensions
  "UP", # pyupgrade
  "ANN", # flake8-annotations - require type annotations
  "N", # naming conventions
  "SIM", # simplify
  "RET", # return values
  "ARG", # unused arguments
  "PTH", # pathlib
  "RUF", # ruff-specific rules
]
ignore = []

[tool.ruff.lint.per-file-ignores]
"tests/**" = [
  "ANN001", # Missing type annotation for function argument (test fixtures/mocks)
  "ANN201", # Missing return type annotation for public function (test fixtures)
]

[tool.pyrefly]
project-includes = ["**/*"]
project-excludes = [
  "**/node_modules",
  "**/__pycache__",
  "**/*venv/**/*",
]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
  "--cov=src/lazy_ecs",
  "--cov-report=term-missing",
  "--cov-report=html",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
